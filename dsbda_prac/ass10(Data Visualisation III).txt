import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Load the Iris dataset
iris = sns.load_dataset('iris')

# -------------------------------
# 1. List features and their types
# -------------------------------
print("1. Features and Their Types:\n")
print(iris.dtypes)
print("\nFeature Summary:")
for col in iris.columns:
    dtype = iris[col].dtype
    if dtype == 'float64':
        print(f"- {col}: Numeric")
    else:
        print(f"- {col}: Nominal")

# -------------------------------
# 2. Histograms for each feature
# -------------------------------
print("\n2. Plotting Histograms...")
iris.hist(figsize=(10, 8), edgecolor='black')
plt.suptitle("Histograms for Each Numeric Feature")
plt.show()

# -------------------------------
# 3. Boxplots for each feature
# -------------------------------
print("3. Plotting Boxplots...")
plt.figure(figsize=(12, 8))
for i, column in enumerate(iris.columns[:-1], 1):
    plt.subplot(2, 2, i)
    sns.boxplot(data=iris, x='species', y=column)
    plt.title(f'Boxplot of {column}')
plt.tight_layout()
plt.show()

# -------------------------------
# 4. Compare distributions & outliers
# -------------------------------
print("4. Distribution Comparison & Outliers:")
for column in iris.columns[:-1]:
    desc = iris[column].describe()
    print(f"\nFeature: {column}")
    print(desc)

    q1 = iris[column].quantile(0.25)
    q3 = iris[column].quantile(0.75)
    iqr = q3 - q1
    lower_bound = q1 - 1.5 * iqr
    upper_bound = q3 + 1.5 * iqr

    outliers = iris[(iris[column] < lower_bound) | (iris[column] > upper_bound)]
    print(f"Potential outliers in {column}: {len(outliers)}")
    if not outliers.empty:
        print(outliers[['species', column]])
    else:
        print("No outliers found.")
